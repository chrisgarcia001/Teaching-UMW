Microsoft Windows [Version 10.0.14393]
(c) 2016 Microsoft Corporation. All rights reserved.

C:\Users\Administrator>cd c:\GitHub\dsci_401

c:\GitHub\dsci_401>python test_bs.py
8
10
15
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]
[1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31, 34, 37, 40, 43, 46, 49]
[1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49]
[1, 4, 7, 10]
*
**
***



*
**
***
****
*****



*
**
***
****
*****
****
***
**
*
{'a': 1, 'x': 2, 2: 2, 3: 1}
{'a': 1, 'tonight': 1, 'name': 1, 'for': 1, 'be': 1, 'this': 1, 'text': 1, 'is': 2, 'extra-special': 1, 'sample': 1, 'will': 1, 'dinner': 1, 'file': 1, 'chris': 1, "i'm": 1, 'my': 1, 'having': 1, 'pizza': 1}
9
A is 2
B is 3
None
A is 2
B is 3
  Next Optional Input: 4
  Next Optional Input: 5
  Next Optional Input: 6
  Next Optional Input: Something
  Next Optional Input: Else
None

c:\GitHub\dsci_401>python
Python 2.7.13 |Anaconda 4.4.0 (64-bit)| (default, May 11 2017, 13:17:26) [MSC v.1500 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
Anaconda is brought to you by Continuum Analytics.
Please check out: http://continuum.io/thanks and https://anaconda.org
>>> sum(1,2,3,4,5)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: sum expected at most 2 arguments, got 5
>>> max(1,2,3,4,5,6,7,8)
8
>>> max(1,2,3)
3
>>> max(range(1, 1001))
1000
>>> sum(1,2,3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: sum expected at most 2 arguments, got 3
>>> sum(1,2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'int' object is not iterable
>>> from basic_functions import *
>>> add_2(4, 5)
9
>>> my_vals = [[1,2], [3,4], [5,6]]
>>> for e in my_vals:
...     print(add_2(*e))
...
3
7
11
>>> add_2(*[5,7])
12
>>> add_2([5,7])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_2() takes exactly 2 arguments (1 given)
>>> nums_1 = [1,2,3,4,5,6,7,8,9,10]
>>> nums_2 = range(1, 101)
>>> filter(lambda x: x > 5, nums_1)
[6, 7, 8, 9, 10]
>>> nums_1
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
>>> filter(lambda x: x > 5, nums_1)
[6, 7, 8, 9, 10]
>>> nums_2
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]
>>> 16/2
8
>>> 16.0/2
8.0
>>> 17.0/2
8.5
>>> 17/2
8
>>> 9.0/2
4.5
>>> 9/2
4
>>> filter(lambda x: (x / 2) * 2 == x, nums_2)
[2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100]
>>> filter(lambda x: not((x / 2) * 2 == x), nums_2)
[1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99]
>>> 1 != 3
True
>>> filter(lambda x: (x / 2) * 2 != x, nums_2)
[1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99]
>>> zip([1,2,3],[4,5,6],[7,8,9])
[(1, 4, 7), (2, 5, 8), (3, 6, 9)]
>>> zip(range(10), range(11,20), range(21, 30), range(31,40))
[(0, 11, 21, 31), (1, 12, 22, 32), (2, 13, 23, 33), (3, 14, 24, 34), (4, 15, 25, 35), (5, 16, 26, 36), (6, 17, 27, 37), (7, 18, 28, 38), (8, 19, 29, 39)]
>>> list((1,2,3))
[1, 2, 3]
>>> mat = [range(10), range(11,20), range(21, 30), range(31,40)]
>>> mat
[[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [11, 12, 13, 14, 15, 16, 17, 18, 19], [21, 22, 23, 24, 25, 26, 27, 28, 29], [31, 32, 33, 34, 35, 36, 37, 38, 39]]
>>> zip(*mat)
[(0, 11, 21, 31), (1, 12, 22, 32), (2, 13, 23, 33), (3, 14, 24, 34), (4, 15, 25, 35), (5, 16, 26, 36), (6, 17, 27, 37), (7, 18, 28, 38), (8, 19, 29, 39)]
>>> map(list, zip(*mat))
[[0, 11, 21, 31], [1, 12, 22, 32], [2, 13, 23, 33], [3, 14, 24, 34], [4, 15, 25, 35], [5, 16, 26, 36], [6, 17, 27, 37], [7, 18, 28, 38], [8, 19, 29, 39]]
>>> exit()

c:\GitHub\dsci_401>