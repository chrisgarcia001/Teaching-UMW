Microsoft Windows [Version 10.0.14393]
(c) 2016 Microsoft Corporation. All rights reserved.

C:\Users\Administrator>cd C:\GitHub\dsci_401

C:\GitHub\dsci_401>python
Python 2.7.13 |Anaconda 4.4.0 (64-bit)| (default, May 11 2017, 13:17:26) [MSC v.1500 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
Anaconda is brought to you by Continuum Analytics.
Please check out: http://continuum.io/thanks and https://anaconda.org
>>> a = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> a
[[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> a[0]
[1, 2, 3]
>>> a[0][1]
2
>>> a[1][2]
6
>>> b = [2,6,1,2,6,9,1,3]
>>> b
[2, 6, 1, 2, 6, 9, 1, 3]
>>> sorted(b)
[1, 1, 2, 2, 3, 6, 6, 9]
>>> b
[2, 6, 1, 2, 6, 9, 1, 3]
>>> c = ['x', 's', 'a', 'r']
>>> c
['x', 's', 'a', 'r']
>>> sorted(c)
['a', 'r', 's', 'x']
>>> d = sorted(c)
>>> c
['x', 's', 'a', 'r']
>>> d
['a', 'r', 's', 'x']
>>> c
['x', 's', 'a', 'r']
>>> c.sort()
>>> c
['a', 'r', 's', 'x']
>>> a
[[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> b
[2, 6, 1, 2, 6, 9, 1, 3]
>>> b.reverse()
>>> b
[3, 1, 9, 6, 2, 1, 6, 2]
>>> b.reverse()
>>> b
[2, 6, 1, 2, 6, 9, 1, 3]
>>> b
[2, 6, 1, 2, 6, 9, 1, 3]
>>> b[1]
6
>>> b[:3]
[2, 6, 1]
>>> b[3:]
[2, 6, 9, 1, 3]
>>> b[2:6]
[1, 2, 6, 9]
>>> b[::-1]
[3, 1, 9, 6, 2, 1, 6, 2]
>>> b
[2, 6, 1, 2, 6, 9, 1, 3]
>>> b
[2, 6, 1, 2, 6, 9, 1, 3]
>>> b2 = list(b)
>>> b3 = b
>>> b.append(22)
>>> b
[2, 6, 1, 2, 6, 9, 1, 3, 22]
>>> b3
[2, 6, 1, 2, 6, 9, 1, 3, 22]
>>> b2
[2, 6, 1, 2, 6, 9, 1, 3]
>>> s1 = "This is a string!"
>>> s2 = 'So is this!'
>>> s1
'This is a string!'
>>> s2
'So is this!'
>>> s3 = 'This is "a quote within" a quote'
>>> s3
'This is "a quote within" a quote'
>>> b
[2, 6, 1, 2, 6, 9, 1, 3, 22]
>>> c
['a', 'r', 's', 'x']
>>> b + c
[2, 6, 1, 2, 6, 9, 1, 3, 22, 'a', 'r', 's', 'x']
>>> s1
'This is a string!'
>>> s2
'So is this!'
>>> s1 + s2
'This is a string!So is this!'
>>> s1 + ' ' + s2
'This is a string! So is this!'
>>> s1
'This is a string!'
>>> s1.lower()
'this is a string!'
>>> s1.upper()
'THIS IS A STRING!'
>>> s1[2:5]
'is '
>>> s1[2:6]
'is i'
>>> s1.upper()[2:6]
'IS I'
>>> s1.upper()[5:]
'IS A STRING!'
>>> s3 = 'abc-def-ghi'
>>> s3
'abc-def-ghi'
>>> s3.split('-')
['abc', 'def', 'ghi']
>>> 'abcxyzdefxyzhij'.split('xyz')
['abc', 'def', 'hij']
>>> s4 = 'abcxyzdefxyzhij'.split('xyz')
>>> s4
['abc', 'def', 'hij']
>>> ['abc', 'def', 'ghi']
['abc', 'def', 'ghi']
>>> '-'.join(['abc', 'def', 'ghi'])
'abc-def-ghi'
>>> ':::'.join(['abc', 'def', 'ghi'])
'abc:::def:::ghi'
>>> range(25)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
>>> range(10, 100)
[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]
>>> range(10, 100)[2]
12
>>> print(range(10,100))
[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]
>>> range(10, 100
... )
[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]
>>> list(range(10, 100))
[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]
>>> range(1, 20, 3)
[1, 4, 7, 10, 13, 16, 19]
>>> range(1, 20, 2.617)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: range() integer step argument expected, got float.
>>> range(1, 20, 3)
[1, 4, 7, 10, 13, 16, 19]
>>> range(50, 20, -3)
[50, 47, 44, 41, 38, 35, 32, 29, 26, 23]
>>> reverse(range( 20, 50, 3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'reverse' is not defined
>>> range( 20, 50, 3)[::-1]
[47, 44, 41, 38, 35, 32, 29, 26, 23, 20]
>>> range( 20, 51, 3)[::-1]
[50, 47, 44, 41, 38, 35, 32, 29, 26, 23, 20]
>>> v = [1,1,1,2,2,2,3,3,3]
>>> v
[1, 1, 1, 2, 2, 2, 3, 3, 3]
>>> set(v)
set([1, 2, 3])
>>> w = set(v)
>>> w
set([1, 2, 3])
>>> w.add(4)
>>> w
set([1, 2, 3, 4])
>>> w.add(4)
>>> w
set([1, 2, 3, 4])
>>> w.add('xyz')
>>> w
set([1, 2, 3, 4, 'xyz'])
>>> w.remove('xyz')
>>> w
set([1, 2, 3, 4])
>>> x = set(['a', 'b', 'c', 3, 4])
>>> x
set(['a', 3, 'c', 'b', 4])
>>> v
[1, 1, 1, 2, 2, 2, 3, 3, 3]
>>> w
set([1, 2, 3, 4])
>>> y = w
>>> x
set(['a', 3, 'c', 'b', 4])
>>> y
set([1, 2, 3, 4])
>>> x.union(y)
set(['a', 1, 'c', 3, 4, 2, 'b'])
>>> x.intersection(y)
set([3, 4])
>>> y.union(x)
set(['a', 1, 2, 3, 4, 'c', 'b'])
>>> y.intersection(x)
set([3, 4])
>>> x.difference(y)
set(['a', 'c', 'b'])
>>> y.difference(x)
set([1, 2])
>>>